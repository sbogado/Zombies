ENGINE = InnoDB
SHOW WARNINGS;

CREATE  TABLE IF NOT EXISTS PLAYER (
  PLAYER_ID BIGINT NOT NULL AUTO_INCREMENT ,
  PLAYER_NAME VARCHAR(100) NULL ,
  PRIMARY KEY (PLAYER_ID) ,
  UNIQUE INDEX UQ_PLAYER_ID_ (PLAYER_ID ASC) )
COMMENT = 'PLAYER CREATED';

CREATE  TABLE IF NOT EXISTS USER_CREDENTIAL (
  USER_ID BIGINT NOT NULL AUTO_INCREMENT ,
  USER_NAME VARCHAR(100) NULL ,
  USER_PASSWORD VARCHAR(100) NULL ,
  USER_EMAIL VARCHAR(100) NULL ,
  USER_ENABLED TINYINT(1) NULL ,
  USER_PASSWORD_CHANGED DATETIME NULL ,
  USER_LAST_LOGIN DATETIME NULL ,
  PLAYER_ID BIGINT NOT NULL ,
  
  PRIMARY KEY (USER_ID) ,
  UNIQUE INDEX UQ_USER_ID_ (USER_ID ASC),
  
  CONSTRAINT FK_USER_PLAYER
    FOREIGN KEY (PLAYER_ID )
    REFERENCES PLAYER (PLAYER_ID )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
COMMENT = 'USER CREATED';


ALTER TABLE PLAYER ADD PLAYER_EXPERIENCE INTEGER;
ALTER TABLE PLAYER ADD PLAYER_ESCENE INTEGER;
ALTER TABLE PLAYER ADD PLAYER_AIM INTEGER;
ALTER TABLE PLAYER ADD PLAYER_HIT_RECOVERY INTEGER;
ALTER TABLE PLAYER ADD PLAYER_TOTAL_LIFE INTEGER;
ALTER TABLE PLAYER ADD PLAYER_MONEY INTEGER;
ALTER TABLE PLAYER ADD PLAYER_MOVEMENT INTEGER;
ALTER TABLE PLAYER ADD PLAYER_RECHARGE INTEGER;
ALTER TABLE PLAYER ADD PLAYER_SKILL_POINTS INTEGER;




CREATE  TABLE IF NOT EXISTS PLAYER_LEVEL (
  PLAYER_LEVEL_ID BIGINT NOT NULL AUTO_INCREMENT ,
  PLAYER_LEVEL_NUMBER INTEGER NULL ,
  PLAYER_LEVEL_EXPERIENCE_TO_NEXT_LEVEL INTEGER NULL ,
  PLAYER_LEVEL_SKILL_POINTS INTEGER NULL ,
  PLAYER_LEVEL_NEXT_LEVEL_ID BIGINT NULL ,
  
  PRIMARY KEY (PLAYER_LEVEL_ID) ,
  UNIQUE INDEX UQ_PLAYER_LEVEL_ID_ (PLAYER_LEVEL_ID ASC),
  
	CONSTRAINT FK_PLAYER_LEVEL_PLAYER_LEVEL
	FOREIGN KEY (PLAYER_LEVEL_NEXT_LEVEL_ID )
	REFERENCES PLAYER_LEVEL (PLAYER_LEVEL_ID )
	ON DELETE NO ACTION
	ON UPDATE NO ACTION)
COMMENT = 'PLAYER_LEVEL CREATED';


ALTER TABLE PLAYER ADD PLAYER_LEVEL_ID BIGINT NULL;

ALTER TABLE PLAYER
ADD CONSTRAINT FK_PLAYER_LEVEL
    FOREIGN KEY (PLAYER_LEVEL_ID )
    REFERENCES PLAYER_LEVEL (PLAYER_LEVEL_ID )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
COMMENT = 'FK_PLAYER_LEVEL TO PLAYER CREATED'; 


CREATE  TABLE IF NOT EXISTS PLAYER_MISSION (
  PLAYER_ID BIGINT NOT NULL AUTO_INCREMENT ,
  MISSION_ID BIGINT NULL ,
  IS_ACOMPLISHED BOOLEAN NULL ,
  
  PRIMARY KEY (PLAYER_ID,MISSION_ID) ,
  
	CONSTRAINT FK_PLAYER_MISSION_PLAYER
	FOREIGN KEY (PLAYER_ID )
	REFERENCES PLAYER (PLAYER_ID )
	ON DELETE NO ACTION
	ON UPDATE NO ACTION,
	
	CONSTRAINT FK_PLAYER_MISSION_MISSION
	FOREIGN KEY (MISSION_ID )
	REFERENCES MISSION (MISSION_ID )
	ON DELETE NO ACTION
	ON UPDATE NO ACTION
);
    
